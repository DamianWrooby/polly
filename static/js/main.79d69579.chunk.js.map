{"version":3,"sources":["components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItems.js","components/Topbar/Topbar.js","hoc/Layout/Layout.js","components/UI/Input/Input.js","components/UI/Loader/Loader.js","components/UI/ErrorMessage/ErrorMessage.js","hoc/withErrorHandler/withErrorHandler.js","axios-geocode.js","containers/Front/Front.js","components/MeasurementInfo/MeasurementInfo.js","components/Charts/DoughnutChart/DoughnutChart.js","components/Tooltip/Tooltip.js","components/MeasurementCircle/MeasurementCircle.js","components/WeatherCircle/WeatherCircle.js","components/MeasurementBox/MeasurementBox.js","components/AirQualityBox/AirQualityBox.js","containers/Results/Results.js","components/NotFound/NotFound.js","components/About/About.js","App.js","serviceWorker.js","index.js","hoc/Layout/Layout.module.css","components/Tooltip/Tooltip.module.css","containers/Results/Results.module.css","components/MeasurementInfo/MeasurementInfo.module.css","components/MeasurementCircle/MeasurementCircle.module.css","components/NotFound/NotFound.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Button/Button.module.css","components/Topbar/Topbar.module.css","components/WeatherCircle/WeatherCircle.module.css","components/MeasurementBox/MeasurementBox.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/ErrorMessage/ErrorMessage.module.css","containers/Front/Front.module.css","components/AirQualityBox/AirQualityBox.module.css","components/About/About.module.css"],"names":["module","exports","navigationItem","props","className","classes","NavigationItem","to","link","activeClassName","active","exact","children","Button","type","icon","disabled","clicked","ariaLabel","onClick","aria-label","Wrapper","Box","aria-hidden","NavigationItems","Topbar","Watermark","layout","Main","Curved","xmlns","viewBox","fill","fillOpacity","d","Content","input","inputElement","value","changed","blured","label","sublabel","invalid","validationFeedback","inputClasses","feedbackClasses","Feedback","push","Invalid","In","join","onChange","onBlur","Input","Label","Sublabel","spinner","Loader","Circle","One","Two","Three","ErrorMessage","textElement","action","classList","withErrorHandler","WrappedComponent","axios","goBackHandler","event","preventDefault","window","location","reload","state","error","this","reqInterceptor","interceptors","request","use","req","setState","resInterceptor","response","res","err","console","log","eject","renderSection","message","Component","instance","create","baseURL","inputChangedHandler","updatedInputValue","target","updatedValidation","checkValidity","query","valid","trim","searchHandler","loading","get","then","data","results","locations","latLng","queryParams","i","encodeURIComponent","queryString","history","pathname","search","catch","lat","lng","form","onSubmit","Front","MeasurementInfo","locationText","time","street","adminArea5","adminArea1","fromDate","Date","from","tillDate","till","fromDateArr","toLocaleString","split","pop","fromDateString","tillDateArr","shift","tillHourArr","tillHourString","dateString","LocationLabel","DaughnutChart","chartData","width","height","options","Tooltip","maxValue","norm","Norm","Value","MeasurementCircle","pollutionLevel","chartColor","chartColorBackground","datasets","backgroundColor","borderWidth","labels","tooltips","enabled","responsive","cutoutPercentage","legend","display","WeatherCircle","symbol","valueString","MeasurementBox","box","tip","dataArr","key","pollutionBoxClassList","circlesClassList","Circles","Pollution","length","Wrap","Tip","map","el","AirQualityBox","adviceText","index","indexValue","Index","level","toLowerCase","replace","boxClasses","GradientLow","GradientMedium","GradientHigh","advice","Advice","goBack","coordinates","info","measurements","URLSearchParams","updatedLocation","updatedCoordinates","entries","param","locationInfoReq","pollutionInfoReq","all","spread","locationInfoRes","pollutionInfoRes","updatedLocationInfo","updatedIndex","current","indexes","updatedTime","fromDateTime","tillDateTime","valuesArray","values","pollutionObject","name","updatedMeasurements","dust","PM1","PM25","PM10","gases","NO2","SO2","CO","O3","weather","TEMPERATURE","HUMIDITY","PRESSURE","updatedDust","updatedGases","updatedWeather","updatedMeasurementsArr","forEach","obj","Object","keys","property","errors","Measurements","Results","NotFound","Heading","Subheading","About","App","Layout","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79d69579.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__ANdA0\",\"Circle\":\"Loader_Circle__Vzz5E\",\"rotate\":\"Loader_rotate__3fyxQ\",\"One\":\"Loader_One__2EbeA\",\"Two\":\"Loader_Two__1Sh6N\",\"Three\":\"Loader_Three__EwNwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"Sublabel\":\"Input_Sublabel__WaFjo\",\"Invalid\":\"Input_Invalid__16Mis\",\"Feedback\":\"Input_Feedback__1wyng\",\"In\":\"Input_In__1UYsB\"};","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink to={props.link}\n                activeClassName={classes.active}\n                exact={props.exact}>\n                {props.children}\n            </NavLink>\n        </li>\n    );\n};\n\nexport default navigationItem;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = ({ type, icon, disabled, clicked, ariaLabel }) => {\n  return (\n    <button\n      type={type}\n      disabled={disabled}\n      onClick={clicked}\n      aria-label={ariaLabel}\n    >\n      <div className={classes.Wrapper}>\n        <div className={classes.Box}>\n          <i className={icon} aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport Button from '../../UI/Button/Button';\nimport classes from './NavigationItems.module.css';\n\nconst NavigationItems = () => {\n  return (\n    <ul className={classes.NavigationItems}>\n      <NavigationItem link=\"/\" exact>\n        <Button icon=\"fa fa-search\" type=\"button\" ariaLabel=\"search\" />\n      </NavigationItem>\n      <NavigationItem link=\"/about\">\n        <Button icon=\"fa fa-info\" type=\"button\" ariaLabel=\"about\" />\n      </NavigationItem>\n    </ul>\n  );\n};\n\nexport default NavigationItems;\n","import React from 'react';\nimport NavigationItems from '../Navigation/NavigationItems/NavigationItems';\nimport classes from './Topbar.module.css';\n\n\nconst Topbar = () => {\n    return (\n        <header className={classes.Topbar}>\n            <div className={classes.Watermark}>Polly</div>\n            <nav>\n                <NavigationItems />\n            </nav>\n        </header>\n    );\n};\n\nexport default Topbar;","import React from 'react';\nimport Topbar from '../../components/Topbar/Topbar.js';\nimport classes from './Layout.module.css';\n\nconst layout = ({ children }) => {\n  return (\n    <div className={classes.Wrapper}>\n      <main className={classes.Main}>\n        <Topbar />\n        <div className={classes.Curved}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n            <path\n              fill=\"rgb(246, 251, 253)\"\n              fillOpacity=\"1\"\n              d=\"M0,128L60,154.7C120,181,240,235,360,240C480,245,600,203,720,186.7C840,171,960,181,1080,202.7C1200,224,1320,256,1380,272L1440,288L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"\n            ></path>\n          </svg>\n        </div>\n        <div className={classes.Content}>{children}</div>\n      </main>\n    </div>\n  );\n};\n\nexport default layout;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input = ({\n  value,\n  changed,\n  blured,\n  label,\n  sublabel,\n  invalid,\n  validationFeedback,\n}) => {\n  let inputElement = null;\n  const inputClasses = [];\n  const feedbackClasses = [classes.Feedback];\n  if (invalid) {\n    inputClasses.push(classes.Invalid);\n    feedbackClasses.push(classes.In);\n  }\n  inputElement = (\n    <input\n      className={inputClasses.join(' ')}\n      value={value}\n      onChange={changed}\n      onBlur={blured}\n    />\n  );\n\n  return (\n    <div className={[classes.Input]}>\n      <label>\n        <span className={classes.Label}>{label}</span>\n        <br />\n        <span className={classes.Sublabel}>{sublabel}</span>\n      </label>\n      {inputElement}\n      <p className={feedbackClasses.join(' ')}>{validationFeedback}</p>\n    </div>\n  );\n};\n\nexport default input;\n","import React from 'react';\nimport classes from './Loader.module.css';\n\nconst spinner = () => {\n  return (\n    <div className={classes.Loader}>\n      <div className={[classes.Circle, classes.One].join(' ')}></div>\n      <div className={[classes.Circle, classes.Two].join(' ')}></div>\n      <div className={[classes.Circle, classes.Three].join(' ')}></div>\n    </div>\n  );\n};\n\nexport default spinner;\n","import React from 'react';\nimport classes from './ErrorMessage.module.css';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nconst ErrorMessage = ({ textElement, action }) => {\n  const classList = [\n    classes.ErrorMessage,\n    'animate__animated',\n    'animate__bounceInDown',\n    'animate__fast',\n  ];\n  return (\n    <div className={classList.join(' ')}>\n      {textElement}\n      <Button clicked={action} icon=\"fa fa-step-backward\" type=\"button\" />\n    </div>\n  );\n};\n\nErrorMessage.propTypes = {\n  textElement: PropTypes.element.isRequired,\n};\n\nexport default ErrorMessage;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from 'react';\nimport ErrorMessage from '../../components/UI/ErrorMessage/ErrorMessage';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n      };\n    }\n\n    componentDidMount() {\n      this.reqInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error }, () => {\n            const { error: err } = this.state;\n            console.log(err);\n          });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    goBackHandler = (event) => {\n      event.preventDefault();\n      window.location.reload(false);\n    };\n\n    render() {\n      const { error: err } = this.state;\n\n      const renderSection = err ? (\n        <>\n          <ErrorMessage\n            textElement={\n              <p>\n                {this.state.error.message}\n                <br />\n                Try to search another loaction.\n              </p>\n            }\n            action={this.goBackHandler}\n          />\n        </>\n      ) : null;\n      return (\n        <>\n          {renderSection}\n          <WrappedComponent {...this.props} />\n        </>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://www.mapquestapi.com/geocoding/v1/'\n});\n\nexport default instance;\n","import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Loader from '../../components/UI/Loader/Loader';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Front.module.css';\nimport axios from '../../axios-geocode';\n\nclass Front extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      valid: true,\n      location: {\n        lat: null,\n        lng: null,\n      },\n      loading: false,\n      error: null,\n    };\n  }\n  componentWillUnmount() {}\n\n  inputChangedHandler = (event) => {\n    const updatedInputValue = event.target.value;\n    const updatedValidation = this.checkValidity(updatedInputValue);\n    this.setState({ query: updatedInputValue, valid: updatedValidation });\n  };\n\n  checkValidity = (value) => value.trim() !== '';\n\n  searchHandler = (event) => {\n    event.preventDefault();\n    if (!this.state.query) {\n      this.setState({ valid: false });\n    } else {\n      this.setState({ loading: true });\n      const key = 'xyDRoBak7eftOCqBEbiRd30Qm0u9K2Nr';\n\n      axios\n        .get(`address?key=${key}&location=${this.state.query}`)\n        .then((response) => {\n          const location = response.data.results[0].locations[0].latLng;\n          this.setState({ loading: false, location: location });\n          const queryParams = [];\n          for (let i in this.state.location) {\n            queryParams.push(\n              encodeURIComponent(i) + '=' + this.state.location[i]\n            );\n          }\n          let queryString = queryParams.join('&');\n          this.props.history.push({\n            pathname: '/location',\n            search: '?' + queryString,\n          });\n        })\n        .catch((err) => {\n          this.setState({ loading: false, error: true });\n        });\n    }\n  };\n\n  render() {\n    let form = (\n      <form\n        className={[\n          'animate__animated',\n          'animate__bounceInDown',\n          'animate__fast',\n        ].join(' ')}\n        onSubmit={this.searchHandler}\n      >\n        <Input\n          value={this.state.query}\n          changed={this.inputChangedHandler}\n          blured={this.inputChangedHandler}\n          label=\"Type your location \"\n          sublabel=\"e.g. Mariacka, Gdańsk, Poland\"\n          invalid={!this.state.valid}\n          validationFeedback=\"This field cannot be empty\"\n        />\n        <Button\n          disabled={!this.state.valid}\n          icon=\"fa fa-search\"\n          type=\"submit\"\n          ariaLabel=\"search\"\n        />\n      </form>\n    );\n\n    if (this.state.loading) {\n      form = <Loader />;\n    } else if (this.state.error) {\n      form = null;\n    }\n    return <div className={classes.Front}>{form}</div>;\n  }\n}\n\nexport default withErrorHandler(Front, axios);\n","import React from 'react';\nimport classes from './MeasurementInfo.module.css';\n\nconst MeasurementInfo = ({ location, time }) => {\n  let locationText;\n  if (location.street) {\n    locationText = `${location.street}, ${location.adminArea5}, ${location.adminArea1}`;\n  } else {\n    locationText = `${location.adminArea5}, ${location.adminArea1}`;\n  }\n\n  const fromDate = new Date(time.from);\n  const tillDate = new Date(time.till);\n  const fromDateArr = fromDate.toLocaleString().split(':');\n  fromDateArr.pop();\n  const fromDateString = fromDateArr.join(':');\n  const tillDateArr = tillDate.toLocaleString().split(' ');\n  tillDateArr.shift();\n  const tillHourArr = tillDateArr[0].split(':');\n  tillHourArr.pop();\n  const tillHourString = tillHourArr.join(':');\n  const dateString = `${fromDateString} - ${tillHourString}`;\n\n  return (\n    <div\n      className={[\n        classes.MeasurementInfo,\n        'animate__animated',\n        'animate__bounceInDown',\n      ].join(' ')}\n    >\n      <p>\n        <span className={classes.LocationLabel}>Location:</span>\n        <br /> {locationText}\n      </p>\n      <p>\n        <span className={classes.LocationLabel}>Measurement time:</span>\n        <br /> {dateString}\n      </p>\n    </div>\n  );\n};\n\nexport default MeasurementInfo;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst DaughnutChart = ({ chartData, width, height, options }) => {\n    return (\n        <Doughnut\n            data={chartData}\n            width={width}\n            height={height}\n            options={options} />\n    );\n};\n\nexport default DaughnutChart;","import React from 'react';\nimport classes from './Tooltip.module.css';\n\nconst Tooltip = ({ label, value, maxValue }) => {\n  const norm = maxValue ? (\n    <p className={classes.Norm}>WHO norm: {maxValue} µg/m³</p>\n  ) : (\n    <p className={classes.Norm}>WHO norm: none</p>\n  );\n  return (\n    <div>\n      <p className={classes.Label}>{label} </p>\n      <p className={classes.Value}>{value} </p>\n      {norm}\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport classes from './MeasurementCircle.module.css';\nimport DaughnutChart from '../Charts/DoughnutChart/DoughnutChart';\nimport Tooltip from '../Tooltip/Tooltip';\n\nconst MeasurementCircle = ({ label, value, maxValue }) => {\n  const pollutionLevel = maxValue ? (value / maxValue) * 100 : null;\n  let chartColor = '#6eb6ff';\n  let chartColorBackground = '#90f2ff';\n\n  if (pollutionLevel > 50) {\n    chartColor = '#ff6200';\n  } else if (pollutionLevel > 80) {\n    chartColor = '#ff4000';\n  } else if (pollutionLevel > 100) {\n    chartColorBackground = '#ff0000';\n  }\n  console.log(pollutionLevel);\n  const chartData = {\n    datasets: [\n      {\n        data: [value, maxValue],\n        backgroundColor: [chartColor, chartColorBackground],\n        borderWidth: 0,\n      },\n    ],\n    labels: ['Current', 'Norm'],\n    backgroundColor: ['#000124', '#123411'],\n    options: {\n      tooltips: {\n        enabled: false,\n      },\n      responsive: true,\n      cutoutPercentage: 90,\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  return (\n    <div className={classes.MeasurementCircle}>\n      <div className={classes.Tooltip}>\n        <Tooltip label={label} value={value} maxValue={maxValue} />\n      </div>\n      <h2 className={classes.Label}>{label}</h2>\n      <DaughnutChart\n        chartData={chartData}\n        width={90}\n        height={90}\n        options={chartData.options}\n      />\n    </div>\n  );\n};\n\nexport default MeasurementCircle;\n","import React from 'react';\nimport classes from './WeatherCircle.module.css';\n\nconst WeatherCircle = ({ label, value }) => {\n  let symbol;\n  switch (label) {\n    case 'TEMPERATURE':\n      symbol = '°C';\n      break;\n    case 'HUMIDITY':\n      symbol = '%';\n      break;\n    case 'PRESSURE':\n      symbol = 'hPa';\n      break;\n    case 'WIND':\n      symbol = 'km/h';\n      break;\n    default:\n      symbol = '';\n  }\n  const valueString = `${value} ${symbol}`;\n\n  return (\n    <div className={classes.WeatherCircle}>\n      <h2 className={classes.Label}>{label}</h2>\n      <p>{valueString}</p>\n    </div>\n  );\n};\n\nexport default WeatherCircle;\n","import React from 'react';\nimport MeasurementCircle from '../MeasurementCircle/MeasurementCircle';\nimport WeatherCircle from '../WeatherCircle/WeatherCircle';\n\nimport classes from './MeasurementBox.module.css';\n\nconst MeasurementBox = ({ type, label, data, tip }) => {\n  const dataArr = [];\n  let box;\n\n  switch (type) {\n    case 'pollution':\n      for (const key in data) {\n        if (data[key].value !== null) {\n          dataArr.push({\n            label: key,\n            value: data[key].value,\n            maxValue: data[key].maxValue,\n          });\n        }\n      }\n      const pollutionBoxClassList = [\n        classes.MeasurementBox,\n        'animate__animated',\n        'animate__bounceInUp',\n      ];\n      const circlesClassList = [classes.Circles, classes.Pollution];\n      if (dataArr.length > 3) {\n        circlesClassList.push(classes.Wrap);\n      }\n\n      box =\n        dataArr.length !== 0 ? (\n          <div className={pollutionBoxClassList.join(' ')}>\n            <h2 className={classes.Label}>{label}</h2>\n            <p className={classes.Tip}>{tip}</p>\n            <div className={circlesClassList.join(' ')}>\n              {dataArr.map((el) => {\n                return (\n                  <MeasurementCircle\n                    key={el.label}\n                    label={el.label}\n                    value={el.value}\n                    maxValue={el.maxValue}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        ) : null;\n      break;\n    case 'weather':\n      for (const key in data) {\n        if (data[key].value !== null) {\n          dataArr.push({ label: key, value: data[key].value });\n        }\n      }\n      box =\n        dataArr.length !== 0 ? (\n          <div className={classes.MeasurementBox}>\n            <div className={classes.Label}>{label}</div>\n            <div className={classes.Circles}>\n              {dataArr.map((el) => {\n                return (\n                  <WeatherCircle\n                    key={el.label}\n                    label={el.label}\n                    value={el.value}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        ) : null;\n      break;\n    default:\n      box = <p>No measurement content</p>;\n  }\n\n  return <>{box}</>;\n};\n\nexport default MeasurementBox;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classes from './AirQualityBox.module.css';\n\nconst AirQualityBox = ({ index }) => {\n  const indexValue = index ? (\n    <div className={classes.Index}>\n      <p>\n        <span>Pollution level: </span>\n        {index.level.toLowerCase().replace('_', ' ')}\n      </p>\n    </div>\n  ) : null;\n\n  const boxClasses = [\n    classes.AirQualityBox,\n    'animate__animated',\n    'animate__bounceInDown',\n    'animate__fast',\n  ];\n\n  let adviceText;\n  switch (index.level) {\n    case 'VERY_LOW':\n      adviceText = 'Take a deep breath!';\n      boxClasses.push(classes.GradientLow);\n      break;\n    case 'LOW':\n      adviceText = 'You can go for a walk.';\n      boxClasses.push(classes.GradientLow);\n      break;\n    case 'MEDIUM':\n      adviceText = 'You can go for a walk but you should not.';\n      boxClasses.push(classes.GradientMedium);\n      break;\n    case 'HIGH':\n      adviceText = 'Better stay at home.';\n      boxClasses.push(classes.GradientHigh);\n      break;\n    case 'VERY_HIGH':\n      adviceText = 'Stay at home and close all of the windows';\n      boxClasses.push(classes.GradientHigh);\n      break;\n    case 'UNKNOWN':\n      adviceText = 'Sorry. No sensors in this area.';\n      boxClasses.push(classes.GradientLow);\n      break;\n    default:\n      adviceText = '';\n      break;\n  }\n  const advice = (\n    <div className={classes.Advice}>\n      <p>{adviceText}</p>\n    </div>\n  );\n  return (\n    <div className={boxClasses.join(' ')}>\n      {indexValue}\n      {advice}\n    </div>\n  );\n};\n\nAirQualityBox.propTypes = {\n  index: PropTypes.shape({\n    level: PropTypes.string,\n  }),\n};\n\nexport default AirQualityBox;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport classes from './Results.module.css';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Loader from '../../components/UI/Loader/Loader';\nimport MeasurementInfo from '../../components/MeasurementInfo/MeasurementInfo';\nimport MeasurementBox from '../../components/MeasurementBox/MeasurementBox';\nimport AirQualityBox from '../../components/AirQualityBox/AirQualityBox';\nimport ErrorMessage from '../../components/UI/ErrorMessage/ErrorMessage';\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: {\n        coordinates: {},\n        info: {},\n      },\n      time: {\n        from: '',\n        till: '',\n      },\n      index: {},\n      measurements: {},\n      loading: true,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line react/destructuring-assignment\n    const query = new URLSearchParams(this.props.location.search);\n    const updatedLocation = {\n      coordinates: {},\n      info: {},\n    };\n    const updatedCoordinates = { ...updatedLocation.coordinates };\n    // eslint-disable-next-line no-restricted-syntax\n    for (const param of query.entries()) {\n      // updatedCoordinates[param[0]] = param[1];\n      [, updatedCoordinates[param[0]]] = param;\n    }\n    updatedLocation.coordinates = updatedCoordinates;\n    this.setState({ location: updatedLocation });\n\n    const airlyKey = 'E5uVHwAJDcdy1YKj9x05zTgKtaxMKgAk';\n    const airlyDistance = '1000';\n    const geocodingKey = 'xyDRoBak7eftOCqBEbiRd30Qm0u9K2Nr';\n\n    const locationInfoReq = axios.get(\n      `http://www.mapquestapi.com/geocoding/v1/reverse?key=${geocodingKey}&location=${updatedLocation.coordinates.lat},${updatedLocation.coordinates.lng}`\n    );\n    const pollutionInfoReq = axios.get(\n      `https://airapi.airly.eu/v2/measurements/nearest?lat=${updatedLocation.coordinates.lat}&lng=${updatedLocation.coordinates.lng}&maxDistanceKM=${airlyDistance}&apikey=${airlyKey}`\n    );\n\n    axios\n      .all([locationInfoReq, pollutionInfoReq])\n      .then(\n        axios.spread((...responses) => {\n          const locationInfoRes = responses[0];\n          const pollutionInfoRes = responses[1];\n          console.log(pollutionInfoRes.data);\n\n          let updatedLocationInfo = { ...updatedLocation.info };\n          // updatedLocationInfo = locationInfoRes.data.results[0].locations[0];\n          [updatedLocationInfo] = locationInfoRes.data.results[0].locations;\n          updatedLocation.info = updatedLocationInfo;\n\n          // let updatedIndex = { ...this.state.index };\n          const updatedIndex = pollutionInfoRes.data.current.indexes[0];\n\n          const updatedTime = {\n            from: '',\n            till: '',\n          };\n          updatedTime.from = pollutionInfoRes.data.current.fromDateTime;\n          updatedTime.till = pollutionInfoRes.data.current.tillDateTime;\n\n          const valuesArray = pollutionInfoRes.data.current.values;\n          const pollutionObject = {};\n          for (let i = 0; i < valuesArray.length; i += 1) {\n            pollutionObject[valuesArray[i].name] = valuesArray[i].value;\n          }\n\n          let updatedMeasurements = {\n            dust: {\n              PM1: {\n                value: null,\n                maxValue: null,\n              },\n              PM25: {\n                value: null,\n                maxValue: 25,\n              },\n              PM10: {\n                value: null,\n                maxValue: 50,\n              },\n            },\n            gases: {\n              NO2: {\n                value: null,\n                maxValue: 200,\n              },\n              SO2: {\n                value: null,\n                maxValue: 350,\n              },\n              CO: {\n                value: null,\n                maxValue: 30000,\n              },\n              O3: {\n                value: null,\n                maxValue: 100,\n              },\n            },\n            weather: {\n              TEMPERATURE: {\n                value: null,\n              },\n              HUMIDITY: {\n                value: null,\n              },\n              PRESSURE: {\n                value: null,\n              },\n            },\n          };\n          const updatedDust = { ...updatedMeasurements.dust };\n          const updatedGases = { ...updatedMeasurements.gases };\n          const updatedWeather = { ...updatedMeasurements.weather };\n\n          const updatedMeasurementsArr = [\n            updatedDust,\n            updatedGases,\n            updatedWeather,\n          ];\n\n          updatedMeasurementsArr.forEach((obj) => {\n            Object.keys(obj).forEach((key) => {\n              Object.keys(pollutionObject).forEach((property) => {\n                if (key === property) {\n                  // eslint-disable-next-line no-param-reassign\n                  obj[key].value = pollutionObject[property];\n                }\n              });\n            });\n          });\n\n          updatedMeasurements = {\n            dust: updatedDust,\n            gases: updatedGases,\n            weather: updatedWeather,\n          };\n\n          this.setState(\n            {\n              loading: false,\n              location: updatedLocation,\n              time: updatedTime,\n              index: updatedIndex,\n              measurements: updatedMeasurements,\n            },\n            () => {\n              console.log(this.state);\n            }\n          );\n        })\n      )\n      .catch((errors) => {\n        this.setState({ loading: false, error: true });\n        console.log(errors);\n      });\n  }\n\n  goBackHandler = (event) => {\n    event.preventDefault();\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.history.goBack();\n  };\n\n  render() {\n    const {\n      location: { info },\n    } = this.state;\n    const { time } = this.state;\n    const { index } = this.state;\n    const {\n      measurements: { dust },\n    } = this.state;\n    const {\n      measurements: { gases },\n    } = this.state;\n    const {\n      measurements: { weather },\n    } = this.state;\n    const { loading } = this.state;\n    const { error } = this.state;\n\n    let results = (\n      <div className={classes.Content}>\n        <MeasurementInfo location={info} time={time} />\n        <AirQualityBox index={index} />\n        <div\n          className={[\n            classes.Measurements,\n            'animate__animated',\n            'animate__bounceInUp',\n          ].join(' ')}\n        >\n          <MeasurementBox\n            type=\"pollution\"\n            label=\"Dust\"\n            data={dust}\n            tip={'Tap for more information'}\n          />\n          <MeasurementBox\n            type=\"pollution\"\n            label=\"Gases\"\n            data={gases}\n            tip={'Tap for more information'}\n          />\n          <MeasurementBox type=\"weather\" label=\"Weather\" data={weather} />\n        </div>\n      </div>\n    );\n\n    if (loading) {\n      results = <Loader />;\n    } else if (error) {\n      results = (\n        <ErrorMessage\n          textElement={\n            <p>\n              Cannot find this location.\n              <br />\n              Try another one.\n            </p>\n          }\n          action={this.goBackHandler}\n        />\n      );\n    }\n\n    return <div className={classes.Results}>{results}</div>;\n  }\n}\n\nResults.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func,\n  }).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withErrorHandler(Results, axios);\n","import React from 'react';\nimport classes from './NotFound.module.css';\n\nconst NotFound = () => {\n  return (\n    <div className={classes.Wrapper}>\n      <div className={classes.Heading}>404</div>\n      <div className={classes.Subheading}>Page not found</div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\n\nimport classes from './About.module.css';\n\nconst About = () => {\n  const classList = [\n    classes.About,\n    'animate__animated',\n    'animate__bounceInDown',\n    'animate__fast',\n  ];\n  return (\n    <div className={classList.join(' ')}>\n      <h1>Polly</h1>\n      <h2>Check air pollution in your area</h2>\n      <p>\n        Polly is my first React project created from scratch. It allows users to\n        check air quality in their area. Air pollution is now considered to be\n        the world's largest environmental health threat, accounting for 7\n        million deaths around the world every year. Air pollution causes and\n        exacerbates a number of diseases, ranging from asthma to cancer,\n        pulmonary illnesses and heart disease. Especially in Poland, country\n        were I come from, air pollution is a big issue - we are one of the most\n        polluted country in Europe because of energy managment based on fossil\n        fuels.\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport Front from './containers/Front/Front';\nimport Results from './containers/Results/Results';\nimport NotFound from './components/NotFound/NotFound';\nimport About from './components/About/About';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Front} />\n          <Route path=\"/location\" component={Results} />\n          <Route path=\"/about\" component={About} />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Layout_Wrapper__2JZNi\",\"Main\":\"Layout_Main__Vm9LA\",\"Content\":\"Layout_Content__3H3X8\",\"Curved\":\"Layout_Curved__3IeoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tooltip\":\"Tooltip_Tooltip__8WnFR\",\"Label\":\"Tooltip_Label__1dZxq\",\"Value\":\"Tooltip_Value__3YNht\",\"Norm\":\"Tooltip_Norm__3OPwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Results\":\"Results_Results__2iKBZ\",\"Content\":\"Results_Content__2i24J\",\"Measurements\":\"Results_Measurements__3u5QI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MeasurementInfo\":\"MeasurementInfo_MeasurementInfo__ViLpV\",\"LocationLabel\":\"MeasurementInfo_LocationLabel__1-JH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MeasurementCircle\":\"MeasurementCircle_MeasurementCircle__2GR0W\",\"Label\":\"MeasurementCircle_Label__3cQkE\",\"Tooltip\":\"MeasurementCircle_Tooltip__3b9D8\",\"chartjs-render-monitor\":\"MeasurementCircle_chartjs-render-monitor__1dgUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"NotFound_Wrapper__2ch6H\",\"Heading\":\"NotFound_Heading__1mLti\",\"Subheading\":\"NotFound_Subheading__2lYrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Button_Wrapper__QmTcQ\",\"Box\":\"Button_Box__2imEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Topbar\":\"Topbar_Topbar__2WmOK\",\"Watermark\":\"Topbar_Watermark__3HIvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherCircle\":\"WeatherCircle_WeatherCircle__2kwP8\",\"Label\":\"WeatherCircle_Label__2lEF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MeasurementBox\":\"MeasurementBox_MeasurementBox__13myC\",\"Circles\":\"MeasurementBox_Circles__1dGVM\",\"Wrap\":\"MeasurementBox_Wrap__3jZBE\",\"Label\":\"MeasurementBox_Label__2KR_8\",\"Tip\":\"MeasurementBox_Tip__1_rL7\",\"Pollution\":\"MeasurementBox_Pollution__c2zwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorMessage\":\"ErrorMessage_ErrorMessage__3tVxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Front\":\"Front_Front__3AH4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AirQualityBox\":\"AirQualityBox_AirQualityBox__3H8-W\",\"GradientLow\":\"AirQualityBox_GradientLow__2s8Hr\",\"GradientMedium\":\"AirQualityBox_GradientMedium__J100F\",\"GradientHigh\":\"AirQualityBox_GradientHigh__3u3SV\",\"Index\":\"AirQualityBox_Index__34oGQ\",\"Advice\":\"AirQualityBox_Advice__2N5N9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__scHdH\"};"],"sourceRoot":""}